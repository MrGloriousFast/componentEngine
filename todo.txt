
#2017-10-12


--emergency--

--inprogress--
      
        
    rework components
        ids and type are all over the place
        id as component
        type as class variable

    component manager
        code cleanup
        boolean has_component(id)
        variable cleanup in manager

--testing--

--fridge--
    EXE
        more optimization for low end laptops
        fullscreen
        remove terminal        

    camera component
        camera follows player - done
        implement zoom
        implement rotate
        make camera its own entity?
        make camera follows player but 'lag' behind/before him

--cellar--

    createur
        runtime entity creation
        blueprint entities

    make that whole thing a package or something so i can use it in other projects as an import

    isDead flag and removal of objects
        remove enemy / kill / delete
        hp component

    fix import statements

    play sound
        depending on state of the entity

    support more than one texture
        add background
        transparency
        different image depending on the move direction-
        change image depending on state
        animation
    
    buffer streaming

    rotate or flip images
        rotate camera
    
    multithreading?
        more like multiprocessing
        maybe c can help us here, might make it harder to port to phillipp

    collision
        make enemies and player collide
        chunks/checkerboard world maps?

    write loader class

    ai system
        ai component

    render text
        make a text component (with an offset to the pos in the component)

--done--

    rework systems(processors) and components to fit better into our manager
        systeme bekommen den manager und nehmen sich von ihm was sie brauchen
        bzw wir geben ihnen alles vom manager wass sie brauchen als argument mit

    turn instance class into processor component model
        its called s_render from now on


